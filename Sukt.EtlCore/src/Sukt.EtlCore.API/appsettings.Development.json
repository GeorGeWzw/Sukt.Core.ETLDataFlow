{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Information"
      }
    }
  },
  ///Consul配置信息
  "Service": {
    "Name": "Sukt.EtlCore.API",
    "Port": "80",
    "Version": "v1",
    "DocName": "Sukt.EtlCore.API",
    "Title": "Sukt.EtlCore.API Client Service API",
    "Description": "Sukt.EtlCore.API Client Service API provide some API to help you get OA information",
    "XmlFile": "Sukt.EtlCore.API.xml"
  },
  // 配置Consul中心
  "Consul": {
    "IP": "1065.cloud",
    "Port": "8863"
  },
  "Console": {
    "LogLevel": {
      "Default": "Information"
    }
  },
  "AllowedHosts": "*",
  "SuktCore": {
    "Swagger": {
      "Title": "Sukt.EtlCore.API",
      "Version": "v1.0",
      "Url": "/doc/BasicsService/v1.0/swagger.json"
    },
    "Auth": {
      "Authority": "http://10.1.40.207:8042", //"https://auth.destinycore.club",
      "Audience": "IDN.Services.BasicsService.API"
    },
    "DbContexts": {
      "MySql": {
        "DbContextTypeName": "SuktCore.Shared.DefaultDbContext,Sukt.EtlCore.EntityFrameworkCore",
        "ConnectionString": "server=192.168.11.226;userid=root;pwd=P@ssW0rd;database=Sukt.EtlCore.adada;connectiontimeout=3000;port=3306;Pooling=true;Max Pool Size=300; Min Pool Size=5;",
        "DatabaseType": "MySql",
        "MigrationsAssemblyName": "Sukt.EtlCore.EntityFrameworkCore.DbMigrations"
      }
    },
    "MongoDBs": {
      "MongoDBConnectionString": "SuktCoreMongoDb.txt" //日志审计MongoDB数据库
    },
    "AopManager": {
      "AopTran": {
        "Enabled": false //是否启用全局事务日志
      },
      "RedisCachingAop": {
        "Enabled": false //是否启用全局RedisAOP缓存
      },
      "LogAop": {
        "Enabled": false //是否启用全局AOP日志
      }
    },
    "InterceptorsModule": "Sukt.EtlCore.Application*", //AOP需要代理的层；这个位置根据生成项目的名称去做代理;我这里代理的是服务实现层
    //"IInterceptorsModule": "Sukt.EtlCore.Application.Contracts", //AOP需要代理的层；这个位置根据生成项目的名称去做代理;我这里代理的是服务接口层
    "Cors": {
      "PolicyName": "SuktCore.API",
      "Url": "http://localhost:8080,http://localhost:8081,http://localhost:8082,http://localhost:8083,http://localhost:8084" ////支持多个域名端口，注意端口号后不要带/斜杆：比如localhost:8000/，是错的
    },
    "Jwt": {
      "SecretKey": "{A4ECDB4C-DCDE-4BEF-B1B3-99E22A5418FE}",
      "Issuer": "SuktCore",
      "Audience": "SuktCore",
      "ExpireMins": 10080
    },
    "Migrations": {
      "IsAutoMigration": true, //是否自动迁移
      "IsAddSeedData": true
    },
    "Redis": {
      "ConnectionString": "SuktCoreRedis.txt"
    },
    "AuditEnabled": false //是否启用审计日志
  }
}
